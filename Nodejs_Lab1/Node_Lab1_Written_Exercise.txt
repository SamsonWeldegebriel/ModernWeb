Node Lab1 – Written Exercise

1- Explain why do we want sometimes to use setImmediate instead of use using setTimeOut?
setImmediate doesn't use queue of functions. It checks queue of I/O event handlers. If all I/O events in the current snapshot are processed, it executes the callback. It queues them immediately after the last I/O handler somewhat like process.nextTick. So it is faster.

2. Explain the difference between process.nextTick and setImmediate?

The main difference between the two is that process.nextTick() queues its callbacks before I/O callbacks whereas setImmediate() queues its callbacks after I/O 

We Use setImmediate if you want to queue the function behind whatever I/O event callbacks that are already in the event queue. We use process.nextTick to effectively queue the function at the head of the event queue so that it executes immediately after the current function completes.

So in a case where you're trying to break up a long running, CPU-bound job using recursion, we use setImmediate rather than process.nextTick to queue the next iteration as otherwise any I/O event callbacks wouldn't get the chance to run between iterations.

Callbacks passed to process.nextTick will usually be called at the end of the current flow of execution, and are thus approximately as fast as calling a function synchronously. Left unchecked, this would starve the event loop, preventing any I/O from occurring. setImmediates are queued in the order created, and are popped off the queue once per loop iteration. This is different from process.nextTick which will execute queued callbacks per iteration. setImmediate will yield to the event loop after firing a queued callback to make sure I/O is not being starved.


3. Name 10 global modules available in Node environment.

a. 	http
b. 	fs
c.	stream
d. 	buffer
e. 	setTimeout
f. 	setImmediate
g. 	os
h. 	process
i. 	url
j. 	domain

require
document
module
setInterval
Buffer
http 
V8

exports - local cutomized module
NPM - is not a global object in Node. It isn't part of Node.